1) Install Eclipse EE
	1) I use the version at http://www.eclipse.org/downloads/packages/eclipse-ide-java-ee-developers/junosr1, but other versions might work.
2) Install Subclipse
	1) Open Eclipse
	2) Help -> Install New Software
	3) http://subclipse.tigris.org/update_1.8.x
	4) Check Subclipse
	5) Install (agree to license, etc.)
	6) Restart Eclipse
3) Install PHP plugin
	1) Help -> Install New Software
	2) http://download.eclipse.org/tools/pdt/updates/release
	4) Check PDT Development Tools
	5) Open Uncategorized and check PHP...SDK...
	6) Install
	7) Restart Eclipse
4) If you want to run the website locally, you will need to install PHP, Apache, and MySQL.
	1) Install Apache (http://www.thesitewizard.com/apache/install-apache-2-windows.shtml)
		1) Download the installer (http://httpd.apache.org/download.cgi#apache24). You'll probably want to click "Other Files" and find the correct binary.
			1) For Windows, I used http://download.nextag.com/apache//httpd/binaries/win32/httpd-2.2.22-win32-x86-no_ssl.msi
		2) Run the installer
			1) Use "localhost" for the Network Domain and Server Name
			2) Use any email address you want for the admin email address.
			3) Run the "Typical" installation.
				1) I suggest using "C:\Program Files\Apache Software Foundation" If you use the directory paths I provide, you can just copy my configuration file later on instead of making manuel changes.
		3) Configure httpd.conf
			1) Start -> Apache HTTP Server 2.2 -> Configure Apache Server -> Edit...
			2) If you used the pathnames I gave, copy the httpd.conf contents at the end of this file into your httpd.conf file and skip the rest of this section.
			3) Search for and uncomment (remove the #) the lines containing the following text:
				AddType text/html .shtml
				AddOutputFilter INCLUDES .shtml
			4) Change the DocumentRoot directory (search for the line starting with "DocumentRoot")
				1) Set the directory to "C:/Program Files/Apache Software Foundation/Apache2.2/htdocs/WSGreenways/src/mobile_wsGreenways"
					- (You may need to change this pathname depending on your installation)
					- Don't worry about the WSGreenways directory not existing. That will be created when you check out the project later.
	2) Install PHP (http://www.thesitewizard.com/php/install-php-5-apache-windows.shtml)
		1) Download the PHP Zip (http://windows.php.net/downloads/releases/php-5.4.8-nts-Win32-VC9-x86.zip)
		2) Extract the downloaded file to C:/PHP
		3) Go to C:/PHP and copy php.ini-development to php.ini
		4) Configure php.ini
			1) Search for "short_open_tag = Off" and replace it with "short_open_tag = On"
			2) Search for the line containing "extension=php_mysql.dll" and uncomment it (delete ;).
			3) Search for the line containing "extension_dir ="
				1) Uncomment it.
				2) Replace the string within quotes with the pathname of your PHP installation's ext dir (Example: C:/PHP/ext).
	3) Additional Apache configuration. Ignore this if you've copied the httpd.conf contents.
		1) Search for "LoadModule" There should be a big list of them. After the list, add the line "LoadModule php5_module "c:/php/php5apache2_2.dll""
		2) Search for "AddType" and add the line "AddType application/x-httpd-php .php" at the end of the AddTypes there
		3) Add the line "PHPIniDir "c:/php"" to the end of the file.
		4) Search for the "DirectoryIndex index.html" line and replace it with "DirectoryIndex index.php index.html" or "DirectoryIndex index.php"; it doesn't really matter which.
		5) Restart Apache: Start -> Apache... -> Control... -> Restart...
	4) Install MySQL (http://dev.mysql.com/tech-resources/articles/mysql-installer-for-windows.html)
		1) Download the installer (http://dev.mysql.com/get/Downloads/MySQLInstaller/mysql-installer-community-5.5.28.2.msi/from/http://cdn.mysql.com/)
		2) Run the installer; you might need to restart. I'm not sure what all is strictly necessary in order to run the website locally, so just install everything.
		3) Remember the admin username and password. I suggest leaving "root" as the username.
		4) Open the MySQL workbench: Start -> MySQL -> MySQL Workbench
		5) Open the Local Instance.
		6) If the WSGreenways database does not exist (in the pane on the left), run the following command by entering it in "Query 1" and clicking the lightning bolt
			CREATE DATABASE WSGreenways
		7) The schema of WSGreenways will probably change over the course of the project. Until we find some way to automate it, when it does change:
			1) Copy all the contents of src/mobile_wsGreenways/sql/createDatabase.sql into the Workbench and run it.
			2) Do the same for populateDatabase.sql
	5) In order to run the website locally, you will need to be running a MySQL server.
		1) Run "C:\Program Files\MySQL\MySQL Server 5.5\bin\mysqld.exe"
		2) You may not have this problem, but mysqld.exe usually crashes the first time I open it. It runs fine the second time.
	6) Switch the Eclipse workspace to "C:\Program Files\Apache Software Foundation\Apache2.2\htdocs" by:
		1) You can restart and change the workspace when prompted, or
		2) File -> Switch Workspace -> Other
5) Setup repository location
	1) Window -> Open Perspective -> Other -> SVN Repository Exploring
	2) Under SVN Repositories at the top-left, Right-click -> New -> Repository Location
	3) Enter https://github.com/NCSUWebClass/Fall12-Greenways.git
	4) Finish
6) Checkout repository
	2) Open SVN Repository perspective.
	3) Under SVN Repositories, open ...github...Fall12-Greenways.git
	4) Right-click on trunk
	5) Checkout
	6) Finish
	7) OK (if applicable).
	8) In order to run this locally, you will need to configure src/mobile_wsGreenways/includes/connectvars.php
		1) Change "root" on the DB_USER line if you changed the username during MySQL installation.
		2) Change "f3lsh3r" on the DB_PASSWORD line to your password.
		NOTE: Because everyone will have different connectvars.php, this is the one file you DO NOT want to commit or update, or you'll have to change these values again. Not a big problem, but it can be annoying.
7) Open PHP Perspective. WSGreenways should be in the Project Explorer.
	-The php files that were located in the repository are now in the "reference/oldphp" directory of the project.
	-I've recreated a primitive form of the current WSGreenways mobile site in this project for reference.
		-You can open ref_oldsite_primitive/home.html in a browser
			-Right Click -> Properties; copy the path in location into a browser's address bar
	-All the contents of the zip file provided by Marcia Wilkinson are located under reference/ref_oldsite. PLEASE DON'T MODIFY anything in this folder.
	-The Java/JSP/SQL code from the site re-creation I created prior to receiving the zip file are also located under the reference directory
		
		
At this point, you should have the project and be able to view the local version of the site. To view the PHP version:
1) Start Apache if it's not already started (it should be).
2) Open a browser.
3) Enter "localhost" in the URL.

NOTE: I am aware of the "undefined function mysql_connect()" errors. I'm working on them.

Steps for modifying project:
1) Make changes in the various source files.
2) Right-click on WSGreenways (or any relevant sub-file or directory) -> Team -> Synchronize with Repository.
3) Iterate through changes, preserving, discarding, or copying as necessary.
4) Right-click on WSGreenways (or applicable sub-file or directory) -> Team -> Commit
5) Select relevant files and directories.
6) Enter comment.
7) OK.

If you wish to discard all changes to a particular directory or file since the last checkout/commit, right-click -> Team -> Revert
		

		
		
		
HTTPD.CONF Contents (you may wish to replace ncsuandrew12@gmail.com with your own email address):
#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.2> for detailed information.
# In particular, see 
# <URL:http://httpd.apache.org/docs/2.2/mod/directives.html>
# for a discussion of each configuration directive.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.  
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "C:/Program Files/Apache Software Foundation/Apache2.2" will be interpreted by the
# server as "C:/Program Files/Apache Software Foundation/Apache2.2/logs/foo.log".
#
# NOTE: Where filenames are specified, you must use forward slashes
# instead of backslashes (e.g., "c:/apache" instead of "c:\apache").
# If a drive letter is omitted, the drive on which httpd.exe is located
# will be used by default.  It is recommended that you always supply
# an explicit drive letter in absolute paths to avoid confusion.

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to point the LockFile directive
# at a local disk.  If you wish to share the same ServerRoot for multiple
# httpd daemons, you will need to change at least LockFile and PidFile.
#
ServerRoot "C:/Program Files/Apache Software Foundation/Apache2.2"

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 80

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#
LoadModule actions_module modules/mod_actions.so
LoadModule alias_module modules/mod_alias.so
LoadModule asis_module modules/mod_asis.so
LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule auth_digest_module modules/mod_auth_digest.so
#LoadModule authn_alias_module modules/mod_authn_alias.so
#LoadModule authn_anon_module modules/mod_authn_anon.so
#LoadModule authn_dbd_module modules/mod_authn_dbd.so
#LoadModule authn_dbm_module modules/mod_authn_dbm.so
LoadModule authn_default_module modules/mod_authn_default.so
LoadModule authn_file_module modules/mod_authn_file.so
#LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
#LoadModule authz_dbm_module modules/mod_authz_dbm.so
LoadModule authz_default_module modules/mod_authz_default.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_host_module modules/mod_authz_host.so
#LoadModule authz_owner_module modules/mod_authz_owner.so
LoadModule authz_user_module modules/mod_authz_user.so
LoadModule autoindex_module modules/mod_autoindex.so
#LoadModule cache_module modules/mod_cache.so
#LoadModule cern_meta_module modules/mod_cern_meta.so
LoadModule cgi_module modules/mod_cgi.so
#LoadModule charset_lite_module modules/mod_charset_lite.so
#LoadModule dav_module modules/mod_dav.so
#LoadModule dav_fs_module modules/mod_dav_fs.so
#LoadModule dav_lock_module modules/mod_dav_lock.so
#LoadModule dbd_module modules/mod_dbd.so
#LoadModule deflate_module modules/mod_deflate.so
LoadModule dir_module modules/mod_dir.so
#LoadModule disk_cache_module modules/mod_disk_cache.so
#LoadModule dumpio_module modules/mod_dumpio.so
LoadModule env_module modules/mod_env.so
#LoadModule expires_module modules/mod_expires.so
#LoadModule ext_filter_module modules/mod_ext_filter.so
#LoadModule file_cache_module modules/mod_file_cache.so
#LoadModule filter_module modules/mod_filter.so
#LoadModule headers_module modules/mod_headers.so
#LoadModule ident_module modules/mod_ident.so
#LoadModule imagemap_module modules/mod_imagemap.so
LoadModule include_module modules/mod_include.so
#LoadModule info_module modules/mod_info.so
LoadModule isapi_module modules/mod_isapi.so
#LoadModule ldap_module modules/mod_ldap.so
#LoadModule logio_module modules/mod_logio.so
LoadModule log_config_module modules/mod_log_config.so
#LoadModule log_forensic_module modules/mod_log_forensic.so
#LoadModule mem_cache_module modules/mod_mem_cache.so
LoadModule mime_module modules/mod_mime.so
#LoadModule mime_magic_module modules/mod_mime_magic.so
LoadModule negotiation_module modules/mod_negotiation.so
#LoadModule proxy_module modules/mod_proxy.so
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
#LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#LoadModule proxy_connect_module modules/mod_proxy_connect.so
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
#LoadModule proxy_http_module modules/mod_proxy_http.so
#LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
#LoadModule reqtimeout_module modules/mod_reqtimeout.so
#LoadModule rewrite_module modules/mod_rewrite.so
LoadModule setenvif_module modules/mod_setenvif.so
#LoadModule speling_module modules/mod_speling.so
#LoadModule ssl_module modules/mod_ssl.so
#LoadModule status_module modules/mod_status.so
#LoadModule substitute_module modules/mod_substitute.so
#LoadModule unique_id_module modules/mod_unique_id.so
#LoadModule userdir_module modules/mod_userdir.so
#LoadModule usertrack_module modules/mod_usertrack.so
#LoadModule version_module modules/mod_version.so
#LoadModule vhost_alias_module modules/mod_vhost_alias.so
LoadModule php5_module "c:/php/php5apache2_2.dll"

<IfModule !mpm_netware_module>
<IfModule !mpm_winnt_module>
#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.  
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User daemon
Group daemon

</IfModule>
</IfModule>

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin ncsuandrew12@gmail.com

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
ServerName localhost:80

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "C:/Program Files/Apache Software Foundation/Apache2.2/htdocs/WSGreenways/src/mobile_wsGreenways"

#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories). 
#
# First, we configure the "default" to be a very restrictive set of 
# features.  
#
<Directory />
    Options FollowSymLinks
    AllowOverride None
    Order deny,allow
    Deny from all
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# This should be changed to whatever you set DocumentRoot to.
#
<Directory "C:/Program Files/Apache Software Foundation/Apache2.2/htdocs/WSGreenways/src/mobile_wsGreenways">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.2/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   Options FileInfo AuthConfig Limit
    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #
    Order allow,deny
    Allow from all

</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.php index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being 
# viewed by Web clients. 
#
<FilesMatch "^\.ht">
    Order allow,deny
    Deny from all
    Satisfy All
</FilesMatch>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog "logs/error.log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog "logs/access.log" common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog "logs/access.log" combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server's namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.andrewfelsher.com/test/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ "C:/Program Files/Apache Software Foundation/Apache2.2/cgi-bin/"

</IfModule>

<IfModule cgid_module>
    #
    # ScriptSock: On threaded servers, designate the path to the UNIX
    # socket used to communicate with the CGI daemon of mod_cgid.
    #
    #Scriptsock logs/cgisock
</IfModule>

#
# "C:/Program Files/Apache Software Foundation/Apache2.2/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "C:/Program Files/Apache Software Foundation/Apache2.2/cgi-bin">
    AllowOverride None
    Options None
    Order allow,deny
    Allow from all
</Directory>

#
# DefaultType: the default MIME type the server will use for a document
# if it cannot otherwise determine one, such as from filename extensions.
# If your server contains mostly text or HTML documents, "text/plain" is
# a good value.  If most of your content is binary, such as applications
# or images, you may want to use "application/octet-stream" instead to
# keep browsers from trying to display binary files as though they are
# text.
#
DefaultType text/plain

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig conf/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
    AddType application/x-httpd-php .php

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>

#
# The mod_mime_magic module allows the server to use various hints from the
# contents of the file itself to determine its type.  The MIMEMagicFile
# directive tells the module where the hint definitions are located.
#
#MIMEMagicFile conf/magic

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.andrewfelsher.com/test/subscription_info.html
#

#
# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

#
# EnableMMAP and EnableSendfile: On systems that support it, 
# memory-mapping or the sendfile syscall is used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted 
# filesystems or if support for these functions is otherwise
# broken on your system.
#
#EnableMMAP off
#EnableSendfile off

# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>

PHPIniDir "c:/php"